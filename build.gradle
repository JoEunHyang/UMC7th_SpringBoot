plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java:8.0.33'  // MySQL 드라이버 추가

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// API 문서화
/*
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.9'
*/

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	runtimeOnly 'com.mysql:mysql-connector-j'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//validation 관련 기능
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	//보안
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
	//thymleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Spring Security OAuth2 클라이언트 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', 'src/main/resources']
		}
	}
}
tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 설정부
def generated = 'src/main/generated'

querydsl {
	jpa = true
	querydslSourcesDir = generated
}
sourceSets {
	main.java.srcDir generated
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.annotationProcessor
}

configurations {
	querydsl.extendsFrom compileClasspath
}

